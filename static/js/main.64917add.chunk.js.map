{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["props","mountRef","useRef","useEffect","style","aspect","refCurrent","scene","planeGeometry","planeMaterial","plane","light","urlMap","geometry","cube","name","texture","map","isMouseOver","degrees","camera","renderer","distance","animate","requestAnimationFrame","radian","Math","rotate","rotateBack","ref","App","className","width","height","background","bookCovers","front","back","spine","href","ReactDOM","render","document","getElementById"],"mappings":"kLAGcA,YACZ,IAAMC,EAAWC,iBAAjB,MAqGA,OAnGAC,qBAAU,WACR,IAAM,EAAN,EAAM,WAAcC,EAApB,EAAoBA,MACdC,EAASD,QAAcA,EAA7B,OAkBME,EAAaL,EAAnB,QACMM,EAAQ,IAAd,IACAA,aAAmB,IAAI,EAAJ,EAAgBH,EAAnCG,YAEA,IAAMC,EAAgB,IAAI,EAAJ,aAAtB,IACMC,EAAgB,IAAtB,IACAA,aAEA,IAAMC,EAAQ,IAAI,EAAJ,IAAd,GACAA,mBACAH,SAEA,IAAMI,EAAQ,IAAI,EAAJ,WAAd,GACAA,0BACAA,gBACAJ,SAEA,IAjC0BK,EAiCpBC,EAAW,IAAI,EAAJ,QAAjB,IACMC,EAAO,IAAI,EAAJ,KAlCaF,EAkC1B,EAjCwB,CAAC,OAAQ,QAAS,MAAO,SAAU,QAAzD,QACO,KAAmBG,YACxB,IAAKH,EAAL,GAAmB,OAAO,IAAI,EAAJ,EAAP,UAEnB,IAAMI,GAAU,IAAI,EAAJ,QAA+BJ,EAA/C,IAOA,OAJAI,qBACAA,gBACAA,iBAEO,IAAI,EAAJ,EAA4B,CAAEC,IAAKD,SAuB9CF,gBACAA,sBACAP,SAKA,IAAIW,GAAJ,EACAZ,gCAAyC,WACvCY,QAEFZ,iCAA0C,WACxCY,QAGF,IAAIC,EAAJ,GAEMC,EAAS,IAAI,EAAJ,SAAf,KACAA,sBAEA,IAAMC,EAAW,IAAjB,IACAA,uBACAA,qBACAA,UAAiBjB,EAAjBiB,MAA8BjB,EAA9BiB,QAEA,IAAMC,EAAWF,sBAA2BN,EAA5C,UA8BA,OAHAR,cAAuBe,EAAvBf,YAPgB,SAAViB,IACJC,yBACAN,EApBa,WACb,GAAIC,EAAJ,IAAmB,CAEjB,IAAMM,GADNN,OAC0BO,QAA1B,KACAN,aAAoBM,YAApBN,EACAA,aAAoBM,YAApBN,GAeYO,GAXG,WACjB,GAAIR,EAAJ,GAAkB,CAEhB,IAAMM,GADNN,OAC0BO,QAA1B,KACAN,aAAoBM,YAApBN,EACAA,aAAoBM,YAApBN,GAMuBQ,GACzBR,SAAcb,EAAda,UACAC,cAIFE,GAEO,WACLjB,cAAuBe,EAAvBf,eAED,CAjGHH,IAmGO,yBAAK0B,IAAL,EAAoBzB,MAAOJ,EAAMI,SCjF3B0B,EApBH,WACV,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,CACE3B,MAAO,CAAE4B,MAAO,IAAKC,OAAQ,IAAKC,WAAY,SAC9CC,WAAY,CACVC,MAAO,6BACPC,KAAM,4BACNC,MAAO,gCAGX,4BACE,uBAAGC,KAAK,yCAAR,WADF,MACiE,IAC/D,uBAAGA,KAAK,wBAAR,aAEF,0ECbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.64917add.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport * as THREE from 'three'\n\nconst Book = (props) => {\n  const mountRef = useRef(null)\n\n  useEffect(() => {\n    const { bookCovers, style } = props\n    const aspect = style.width / style.height\n\n    const getBookMaterials = (urlMap) => {\n      const materialNames = ['edge', 'spine', 'top', 'bottom', 'front', 'back']\n      return materialNames.map((name) => {\n        if (!urlMap[name]) return new THREE.MeshBasicMaterial(0xffffff)\n\n        const texture = new THREE.TextureLoader().load(urlMap[name])\n\n        // to create high quality texture\n        texture.generateMipmaps = false\n        texture.minFilter = THREE.LinearFilter\n        texture.needsUpdate = true\n\n        return new THREE.MeshBasicMaterial({ map: texture })\n      })\n    }\n\n    const refCurrent = mountRef.current\n    const scene = new THREE.Scene()\n    scene.background = new THREE.Color(style.background)\n\n    const planeGeometry = new THREE.PlaneGeometry(500, 500, 32, 32)\n    const planeMaterial = new THREE.ShadowMaterial()\n    planeMaterial.opacity = 0.5\n\n    const plane = new THREE.Mesh(planeGeometry, planeMaterial)\n    plane.receiveShadow = true\n    scene.add(plane)\n\n    const light = new THREE.DirectionalLight(0xffffff, 1)\n    light.position.set(-10, 10, 10)\n    light.castShadow = true\n    scene.add(light)\n\n    const geometry = new THREE.BoxGeometry(3.5, 5, 0.5)\n    const cube = new THREE.Mesh(geometry, getBookMaterials(bookCovers))\n    cube.castShadow = true\n    cube.position.set(0, 0, 0)\n    scene.add(cube)\n\n    // const helper = new THREE.CameraHelper(light.shadow.camera);\n    // scene.add(helper);\n\n    let isMouseOver = false\n    refCurrent.addEventListener('mouseover', () => {\n      isMouseOver = true\n    })\n    refCurrent.addEventListener('mouseleave', () => {\n      isMouseOver = false\n    })\n\n    let degrees = 90\n\n    const camera = new THREE.PerspectiveCamera(70, aspect, 1, 1000)\n    camera.position.set(0, 0, 6)\n\n    const renderer = new THREE.WebGLRenderer()\n    renderer.shadowMap.enabled = true\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap\n    renderer.setSize(style.width, style.height)\n\n    const distance = camera.position.distanceTo(cube.position)\n\n    const rotate = () => {\n      if (degrees < 135) {\n        degrees += 2\n        const radian = degrees * (Math.PI / 180)\n        camera.position.x = Math.cos(radian) * distance\n        camera.position.z = Math.sin(radian) * distance\n      }\n    }\n\n    const rotateBack = () => {\n      if (degrees > 90) {\n        degrees -= 2\n        const radian = degrees * (Math.PI / 180)\n        camera.position.x = Math.cos(radian) * distance\n        camera.position.z = Math.sin(radian) * distance\n      }\n    }\n\n    const animate = () => {\n      requestAnimationFrame(animate)\n      isMouseOver ? rotate() : rotateBack()\n      camera.lookAt(scene.position)\n      renderer.render(scene, camera)\n    }\n\n    refCurrent.appendChild(renderer.domElement)\n    animate()\n\n    return () => {\n      refCurrent.removeChild(renderer.domElement)\n    }\n  }, [props])\n\n  return <div ref={mountRef} style={props.style} />\n}\nexport default Book\n","import React from 'react'\n\nimport Book from '3d-book'\n\nconst App = () => {\n  return (\n    <div className='App'>\n      <Book\n        style={{ width: 500, height: 600, background: 'white' }}\n        bookCovers={{\n          front: '/3d-book/images/front.jpeg',\n          back: '/3d-book/images/back.jpeg',\n          spine: '/3d-book/images/spine.jpeg'\n        }}\n      />\n      <h2>\n        <a href='https://github.com/zoomKoding/3d-book'>3d book</a> by{' '}\n        <a href='https://threejs.org/'>three.js</a>\n      </h2>\n      <strong>Hover your mouse to rotate the book.</strong>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}